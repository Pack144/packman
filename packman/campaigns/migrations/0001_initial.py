# Generated by Django 3.2.6 on 2021-09-02 19:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import localflavor.us.models
import packman.calendars.models
import packman.campaigns.models
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dens', '0008_auto_20210720_1640'),
        ('membership', '0008_auto_20210720_1640'),
        ('calendars', '0005_auto_20210720_1640'),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, help_text='Date and time this entry was first added to the database.', verbose_name='created')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='Date and time this entry was last changed in the database.', verbose_name='modified')),
                ('ordering_opens', models.DateField(help_text='The date when members can start taking orders.', verbose_name='sales open')),
                ('ordering_closes', models.DateField(help_text='The final date when all orders must be submitted.', verbose_name='sales close')),
                ('delivery_available', models.DateField(help_text='The date when orders will be available to be delivered.', verbose_name='delivery available')),
                ('prize_window_opens', models.DateField(help_text='The date when members can start selecting prizes.', verbose_name='prize selection open')),
                ('prize_window_closes', models.DateField(help_text='The final date when members can make prize selections.', verbose_name='prize selection close')),
            ],
            options={
                'verbose_name': 'Campaign',
                'verbose_name_plural': 'Campaigns',
                'ordering': ('-ordering_opens',),
                'get_latest_by': 'ordering_opens',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('sort_order', models.IntegerField(blank=True, null=True, verbose_name='sort order')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ('sort_order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('date_added', models.DateTimeField(auto_now_add=True, help_text='Date and time this entry was first added to the database.', verbose_name='created')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='Date and time this entry was last changed in the database.', verbose_name='modified')),
                ('name', models.CharField(max_length=150, verbose_name='name')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('state', localflavor.us.models.USStateField(blank=True, max_length=2, verbose_name='state')),
                ('zipcode', localflavor.us.models.USZipCodeField(blank=True, max_length=10, verbose_name='ZIP code')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='longitude')),
                ('gps_accuracy', models.FloatField(blank=True, null=True, verbose_name='accuracy')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region='US', verbose_name='phone number')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('date_added', models.DateTimeField(auto_now_add=True, help_text='Date and time this entry was first added to the database.', verbose_name='created')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='Date and time this entry was last changed in the database.', verbose_name='modified')),
                ('donation', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='donation')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('date_paid', models.DateTimeField(blank=True, null=True, verbose_name='paid')),
                ('date_delivered', models.DateTimeField(blank=True, null=True, verbose_name='delivered')),
                ('campaign', models.ForeignKey(default=packman.campaigns.models.Campaign.get_latest, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='campaigns.campaign')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='campaigns.customer')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='membership.scout')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Prize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, help_text='Date and time this entry was first added to the database.', verbose_name='created')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='Date and time this entry was last changed in the database.', verbose_name='modified')),
                ('name', models.CharField(max_length=150, verbose_name='name')),
                ('points', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='points')),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='retail value')),
                ('url', models.URLField(blank=True, max_length=320, verbose_name='link')),
                ('campaign', models.ForeignKey(default=packman.campaigns.models.Campaign.get_latest, on_delete=django.db.models.deletion.CASCADE, related_name='prizes', to='campaigns.campaign')),
            ],
            options={
                'verbose_name': 'Prize',
                'verbose_name_plural': 'Prizes',
                'ordering': ['-campaign', 'points', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PrizePoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='earned at')),
                ('value', models.IntegerField(verbose_name='point value')),
            ],
            options={
                'verbose_name': 'Prize Point',
                'verbose_name_plural': 'Prize Points',
                'ordering': ('earned_at',),
            },
        ),
        migrations.CreateModel(
            name='ProductLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, help_text='Date and time this entry was first added to the database.', verbose_name='created')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='Date and time this entry was last changed in the database.', verbose_name='modified')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Product Line',
                'verbose_name_plural': 'Product Lines',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Quota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='quota')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaigns.campaign')),
                ('den', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dens.den')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, help_text='Date and time this entry was first added to the database.', verbose_name='created')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='Date and time this entry was last changed in the database.', verbose_name='modified')),
                ('name', models.CharField(max_length=100, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('image', models.ImageField(blank=True, upload_to='campaigns/', verbose_name='image')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='price')),
                ('weight', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='weight')),
                ('unit', models.CharField(blank=True, choices=[('OZ', 'ounce'), ('LB', 'pound')], max_length=2, verbose_name='measured in')),
                ('sort_order', models.IntegerField(blank=True, null=True, verbose_name='sort order')),
                ('campaign', models.ForeignKey(default=packman.campaigns.models.Campaign.get_latest, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='campaigns.campaign')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='campaigns.category')),
                ('product_line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='campaigns.productline')),
                ('tags', models.ManyToManyField(blank=True, related_name='products', to='campaigns.Tag')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('category', 'sort_order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='PrizeSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, help_text='Date and time this entry was first added to the database.', verbose_name='created')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='Date and time this entry was last changed in the database.', verbose_name='modified')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='quantity')),
                ('campaign', models.ForeignKey(default=packman.campaigns.models.Campaign.get_latest, on_delete=django.db.models.deletion.CASCADE, related_name='prize_selections', related_query_name='prize_selection', to='campaigns.campaign')),
                ('cub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prize_selections', related_query_name='prize_selection', to='membership.scout')),
                ('prize', models.ForeignKey(limit_choices_to=packman.campaigns.models.latest_campaign, on_delete=django.db.models.deletion.CASCADE, related_name='prize_selections', related_query_name='prize_selection', to='campaigns.prize')),
            ],
            options={
                'verbose_name': 'Prize Selection',
                'verbose_name_plural': 'Prize Selections',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, help_text='Date and time this entry was first added to the database.', verbose_name='created')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='Date and time this entry was last changed in the database.', verbose_name='modified')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='quantity')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', related_query_name='item', to='campaigns.order')),
                ('product', models.ForeignKey(limit_choices_to=packman.campaigns.models.latest_campaign, on_delete=django.db.models.deletion.CASCADE, related_name='orders', related_query_name='order', to='campaigns.product')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.AddField(
            model_name='campaign',
            name='dens',
            field=models.ManyToManyField(blank=True, related_name='campaigns', through='campaigns.Quota', to='dens.Den'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='year',
            field=models.ForeignKey(default=packman.calendars.models.PackYear.get_current_id, on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='calendars.packyear'),
        ),
        migrations.AddConstraint(
            model_name='quota',
            constraint=models.UniqueConstraint(fields=('campaign', 'den'), name='unique_quota_per_campaign'),
        ),
    ]
